version: '3.8'

services:
  client:
    build:
      context: .
      target: deps
    command: sh -c "pnpm install && pnpm dev"
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      server:
        condition: service_healthy

  server:
    build:
      context: .
      target: deps
    command: sh -c "until pg_isready -h db -U postgres -d project_bolt; do echo 'Waiting for database to be ready...'; sleep 2; done && pnpm install && pnpm prisma generate && pnpm prisma migrate deploy && pnpm dev:server"
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/project_bolt?schema=public
      - REDIS_URL=redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgis/postgis:16-3.4-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=project_bolt
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d project_bolt"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  prisma-studio:
    build:
      context: .
      target: deps
    command: sh -c "until pg_isready -h db -U postgres -d project_bolt; do echo 'Waiting for database to be ready...'; sleep 2; done && pnpm install && pnpm prisma generate && pnpm prisma studio"
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/project_bolt?schema=public
    depends_on:
      db:
        condition: service_healthy

  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: project_network